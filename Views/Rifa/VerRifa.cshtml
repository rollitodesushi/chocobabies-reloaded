@model Rifa

@{
    ViewData["Title"] = $"{Model.nombreSorteo} - Tablero de Números";
}

<div class="container mx-auto p-4 max-w-4xl">
    <h1 class="text-2xl sm:text-3xl font-bold text-gray-800 mb-6 text-center">@Model.nombreSorteo</h1>
    <div id="bingoGrid" class="bingo-grid grid grid-cols-10 sm:grid-cols-10 md:grid-cols-10 gap-2"></div>
    <div class="mt-4 text-center">
        <span class="bg-green-500 text-white px-2 py-1 rounded mr-2">Disponible</span>
        <span class="bg-orange-400 text-white px-2 py-1 rounded mr-2">Reservado</span>
        <span class="bg-red-500 text-white px-2 py-1 rounded">Comprado</span>
    </div>
</div>

<!-- Modal para asignar o modificar participante -->
<div id="modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center hidden">
    <div class="bg-white p-6 rounded-lg shadow-xl w-full max-w-md animate-fade-in-up">
        <h2 id="modalTitle" class="text-lg font-semibold mb-4 text-gray-800">Asignar número</h2>
        <div class="space-y-3">
            <input id="email" type="email" placeholder="Correo electrónico (opcional)" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
            <input id="nombre" type="text" placeholder="Nombre completo *" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
            <input id="telefono" type="tel" placeholder="Teléfono *" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
            <select id="estado" class="form-select" aria-label="Estado del tiquete">
                <option value="2">Comprado</option>   <!-- estadoTiquete.Comprado -->
                <option value="1">Reservado</option>  <!-- estadoTiquete.Reservado -->
                <option value="0">Disponible</option> <!-- estadoTiquete.Disponible -->
            </select>

            <textarea id="comentarios" rows="2" placeholder="Comentarios (opcional)" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500 resize-none"></textarea>
        </div>
        <div class="mt-5 flex justify-end space-x-3">
            <button id="btnCancelar" class="px-4 py-2 rounded bg-gray-300 hover:bg-gray-400 text-gray-800">Cancelar</button>
            <button id="btnGuardar" class="px-4 py-2 rounded bg-indigo-600 hover:bg-indigo-700 text-white">Guardar</button>
        </div>
    </div>
</div>

@section Scripts {
    <script>

                const urlAsignarNumero = '@Url.Action("AsignarNumero", "Rifa")';
        const urlModificarParticipante = '@Url.Action("ModificarParticipante", "Rifa")';

        document.addEventListener('DOMContentLoaded', () => {
            const grid = document.getElementById('bingoGrid');
            const totalNumeros = 100;
            let numeroSeleccionado = null;
            let editandoParticipante = false;
            let tiqueteIdEditando = null;

            const tiquetesDict = {};
                                 @foreach (var t in Model.tiquetes)
        {
                var nombre = (t.participante?.nombre ?? "").Replace("\"", "\\\"").Replace("\n", "\\n");
                var email = (t.participante?.email ?? "").Replace("\"", "\\\"").Replace("\n", "\\n");
                var telefono = (t.participante?.numeroTelefonico ?? "").Replace("\"", "\\\"").Replace("\n", "\\n");
                var estado = (int)t.estado;
                var comentarios = (t.comentarios ?? "").Replace("\\", "\\\\").Replace("`", "\\u0060").Replace("\n", "\\n").Replace("\"", "\\\"");
                var participanteId = t.participanteId.HasValue ? t.participanteId.Value.ToString() : "null";

                <text>
                tiquetesDict[@t.numeroTiquete] = {
                    tiqueteId: @t.id,
                    estaComprado: @(t.estaComprado.ToString().ToLower()),
                    participanteId: @participanteId,
                    nombre: "@nombre",
                    email: "@email",
                    telefono: "@telefono",
                    estado: @estado,
                    comentarios: `@comentarios`
                };
                </text>
        }


            const abrirModal = (modoEdicion, tiquete = null, numero = null) => {
                editandoParticipante = modoEdicion;
                numeroSeleccionado = numero;
               tiqueteIdEditando = tiquete?.tiqueteId || null;
                       const estadoEnumMap = {
            'Disponible': 0,
            'Reservado': 1,
            'Comprado': 2
        };



                document.getElementById('modalTitle').textContent = modoEdicion ? 'Modificar participante' : 'Asignar número';
                document.getElementById('email').value = tiquete?.email || '';
                document.getElementById('nombre').value = tiquete?.nombre || '';
                document.getElementById('telefono').value = tiquete?.telefono || '';
                //document.getElementById('estado').value = tiquete ? estadoEnumMap[tiquete.estado] : 2;
                document.getElementById('estado').value = tiquete ? tiquete.estado : 2;

                document.getElementById('comentarios').value = tiquete?.comentarios || '';

                document.getElementById('modal').classList.remove('hidden');
            };

            const renderNumero = (i) => {
                const tiquete = tiquetesDict[i];
                let color = 'bg-green-500';
                if (tiquete) {
                           if (tiquete.estado == 1) color = 'bg-orange-400';      // Reservado
        else if (tiquete.estado == 2) color = 'bg-red-500';    // Comprado

                }
                const div = document.createElement('div');
                div.className = `bingo-number relative aspect-square flex items-center justify-center text-center rounded-lg cursor-pointer transition-all duration-200 ${color} text-white hover:scale-105`;
                div.textContent = i.toString().padStart(2, '0');
                div.dataset.number = i;

                if (tiquete && tiquete.participanteId) {
                    const tooltip = document.createElement('div');
                    tooltip.className = `tooltip-info absolute z-50 bottom-full left-1/2 transform -translate-x-1/2 translate-y-2 opacity-0 invisible w-56 p-3 rounded-lg shadow-lg bg-white text-sm text-gray-800 border border-gray-200 transition-all duration-300 ease-in-out pointer-events-none`;
                    tooltip.innerHTML = `
                        <strong class="block text-indigo-600 mb-1">Asignado a:</strong>
                        <div><strong>Nombre:</strong> ${tiquete.nombre}</div>
                        <div><strong>Email:</strong> ${tiquete.email}</div>
                        <div><strong>Teléfono:</strong> ${tiquete.telefono}</div>
                        <div><strong>Comentarios:</strong> ${tiquete.comentarios}</div>
                    `;
                    div.appendChild(tooltip);
                    div.addEventListener('click', (e) => {
                        e.stopPropagation();
                        abrirModal(true, tiquete, i);
                    });
                } else {
                    div.addEventListener('click', () => {
                        abrirModal(false, null, i);
                    });
                }
                return div;
            };

            for (let i = 0; i < totalNumeros; i++) {
                grid.appendChild(renderNumero(i));
            }

            document.getElementById('btnCancelar').addEventListener('click', () => {
                document.getElementById('modal').classList.add('hidden');
            });

                    document.getElementById('btnGuardar').addEventListener('click', async () => {
            const email = document.getElementById('email').value.trim();
            const nombre = document.getElementById('nombre').value.trim();
            const telefono = document.getElementById('telefono').value.trim();
            const estado = parseInt(document.getElementById('estado').value);
            const comentarios = document.getElementById('comentarios').value.trim();

            if (!nombre || !telefono) {
                alert('Nombre y teléfono son obligatorios.');
                return;
            }

            const url = editandoParticipante ? urlModificarParticipante : urlAsignarNumero;

            const payload = editandoParticipante ? {
                tiqueteId: tiqueteIdEditando,
                nombre,
                telefono,
                email,
                estado,
                comentarios
            } : {
                rifaID: @Model.id,
                numeroTiquete: numeroSeleccionado,
                participanteEmail: email,
                nombre,
                telefono,
                estado,
                comentarios
            };

            console.log("Payload a enviar:", payload);

            const response = await fetch(url, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });

            const data = await response.json();
            if (data.success) {
                document.getElementById('modal').classList.add('hidden');
                setTimeout(() => location.reload(), 300);
            } else {
                alert(data.message || 'Error al guardar la información.');
            }
        });

        });
    </script>
}

